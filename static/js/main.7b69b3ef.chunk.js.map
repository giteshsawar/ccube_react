{"version":3,"sources":["components/home/index.js","components/login/index.js","components/test/index.js","components/carUpload/upload.js","assets/Pulse-1s.svg","components/carUpload/index.js","components/AppHome/upload.js","components/AppHome/index.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","checkForPassportUser","fetch","method","credentials","headers","body","JSON","stringify","obj","then","response","json","data","console","log","catch","error","getUserAttendance","userObj","localStorage","getItem","_id","setInputValue","e","target","name","value","state","setState","registerCustomerDetails","user","parse","email","password","address","locality","phoneNumber","saveResidentialSociety","city","zipCode","getEmployeeSchedule","attendantId","this","style","width","margin","onClick","className","type","onChange","placeholder","React","Component","Login","loginUser","employeeId","history","setItem","token","push","verifyOTP","otpCode","setOTP","withRouter","Test","calculateMines","arr","resultArr","i","x","length","row","split","resultRowArr","j","y","mines","rowA","rowB","toString","input","FileUpload","fileUploaded","selectedModel","uploadProps","replace","toLowerCase","info","myFile","File","file","beforeUpload","accept","disabled","Option","Select","CarUpload","fetchAllCarModels","loading","brands","models","map","carData","find","b","brand","m","model","image","sort","a","brandSelected","inputModels","item","selectedBrand","formRef","current","resetFields","modelSelected","getSignedUrl","config","dirName","S3","uploadFile","saveImageToDB","key","err","showNotification","imagePath","modelEx","findIndex","iModelEx","splice","window","open","Promise","resolve","reject","fileName","message","notification","description","createRef","onFinish","onFormFinish","ref","Item","label","rules","required","showSearch","defaultValue","htmlType","src","PulseLoading","alt","AppHome","App","path","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b69b3ef.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            locality: \"\",\n            address: \"\"\n        }; \n    }\n\n    checkForPassportUser = () => {\n        fetch('http://localhost:4000/api/v1/test', {\n            method: 'POST', // or 'PUT'\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({obj: \"YAY!!!!\"}),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n            console.error('Error:', error);\n            });\n    }\n\n    getUserAttendance = () => {\n        const userObj = localStorage.getItem(\"userObj\");\n        fetch('http://localhost:4000/api/v1/attendant/get_employee_attendance', {\n            method: 'POST', // or 'PUT'\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"employee\": userObj._id,\n                \"month\": \"02\"\n            }),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n            console.error('Error:', error);\n            });\n    }\n\n    setInputValue = e => {\n        const { name, value } = e.target;\n        \n        const state = {};\n        state[name] = value;\n\n        this.setState(state);\n    };\n\n    registerCustomerDetails = () => {\n        const user = JSON.parse(localStorage.getItem(\"userObj\"));\n        console.log(\"user in local\", user);\n        const { name, email, password, locality, address } = this.state;\n        const userObj = { phoneNumber: user.phoneNumber, name, email, password, locality: \"60d723bf36d7b6856f7345de\", address };\n\n        fetch('http://localhost:4000/api/v1/customer/user/register_customer', {\n            method: 'POST', // or 'PUT'\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(userObj),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n            console.error('Error:', error);\n            });\n    }\n\n    saveResidentialSociety = () => {\n        const userObj = { name: \"RPS\", city: \"Faridabad\", state: \"Haryana\", zipCode: \"121002\" };\n\n        fetch('http://localhost:4000/api/v1/operation/residential/create_residential', {\n            method: 'POST', // or 'PUT'\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(userObj),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n            console.error('Error:', error);\n            });\n    };\n\n    getEmployeeSchedule = () => {\n        const userObj = { attendantId: '6039a78a72f97828750f0b0e' };\n\n        fetch('http://localhost:4000/api/v1/operation/schedule/get_schedule', {\n            method: 'POST', // or 'PUT'\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(userObj),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n            console.error('Error:', error);\n            });\n    };\n\n    render() {\n        const { name, password, email, locality, address } = this.state;\n        return(\n            <div style={{ width: '500px', margin: 'auto' }}>\n                <h1>Home page</h1>\n                <button onClick={this.checkForPassportUser}>Check it</button>\n                <button onClick={this.getUserAttendance}>Get attendance</button>\n                <br /><br /><br /><br />\n                <div className=\"form\">\n                    <input type=\"text\" value={name} onChange={this.setInputValue} name=\"name\" placeholder=\"name\" /><br /><br />\n                    <input type=\"text\" value={password} onChange={this.setInputValue} name=\"password\" placeholder=\"password\" /><br /><br />\n                    <input type=\"text\" value={email} onChange={this.setInputValue} name=\"email\" placeholder=\"email\" /><br /><br />\n                    <input type=\"text\" value={locality} onChange={this.setInputValue} name=\"locality\" placeholder=\"locality\" /><br /><br />\n                    <input type=\"text\" value={address} onChange={this.setInputValue} name=\"address\" placeholder=\"address\" /><br /><br />\n                    <button onClick={this.registerCustomerDetails}>Register user</button><br /><br />\n                </div>\n                <div>\n                    <button onClick={this.saveResidentialSociety}>Save society</button>\n                </div>\n                <div><br /><br />\n                    <button onClick={this.getEmployeeSchedule}>Get schedule</button>\n                </div>\n            </div>\n        )\n    }\n} ","import React from 'react';\nimport { withRouter } from 'react-router';\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            otpCode: null\n        }; \n    }\n\n    loginUser = (employeeId) => {\n        const { history } = this.props;\n        console.log(\"login props\", this.props);\n        const data = {\n            employeeId,\n            password: 'qwerty12'\n        };  \n\n        fetch('http://localhost:4000/api/v1/auth/login_employeeWPassword', {\n            method: 'POST', // or 'PUT'\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n                localStorage.setItem(\"userObj\", JSON.stringify(data.user));\n                localStorage.setItem(\"userToken\", data.token);\n                history.push(\"/home\");\n            })\n            .catch((error) => {\n            console.error('Error:', error);\n            });\n    };\n\n    verifyOTP = () => {\n        const { otpCode } = this.state;\n        const { history } = this.props;\n        console.log(\"login props\", this.props);\n        const data = {\n            phoneNumber: 965478861,\n            otpCode\n        };\n\n        fetch('http://localhost:4000/api/v1/auth/login_employeeWOTP', {\n            method: 'POST', // or 'PUT'\n            credentials: 'include',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('Success:', data);\n                if (data.user) {\n                    localStorage.setItem(\"userObj\", JSON.stringify(data.user));\n                    localStorage.setItem(\"userToken\", data.token);\n                    history.push(\"/home\");\n                }\n            })\n            .catch((error) => {\n            console.error('Error:', error);\n            });\n    };\n\n    setOTP = e => {\n        this.setState({ otpCode: e.target.value });\n    }\n\n    render() {\n        const { otpCode } = this.state;\n        console.log(\"login props\", this.props);\n        return(\n            <div style={{ width: '500px', margin: 'auto' }}>\n                <h1>Login</h1>\n                <button className=\"login\" onClick={() => this.loginUser(\"AJK2124D\")}>Login user</button>\n                <button className=\"login\" onClick={() => this.loginUser(\"AJHJ124D\")}>Login user 2</button>\n                <br /><br />\n                <input type=\"number\" value={otpCode} onChange={this.setOTP} />\n                <button onClick={this.verifyOTP}>Verify OTP</button>\n            </div>\n        );\n    }\n} \n\nexport default withRouter(Login);","import React from 'react';\n\nclass Test extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    calculateMines = arr => {\n        const resultArr = [];\n        for (let i=0, x=arr.length; i<x; i++) {\n            let row = arr[i].split(\",\");\n            let resultRowArr = [];\n            console.log(\"row to sort\", row, arr[i]);\n            for (let j=0, y=row.length; j<y; j++) {\n                const hPoint =  j;\n                const vPoint = i;\n\n                let mines = 0;\n                if (row[j-1] && row[j-1] === \"X\") mines++;\n\n                if (row[j+1] && row[j+1] === \"X\") mines++;\n\n                if (arr[i-1]) {\n                    const rowA = arr[i-1].split(\",\");\n                    if (rowA[j] && rowA[j] === \"X\") mines++;\n                    if (rowA[j-1] && rowA[j-1] === \"X\") mines++;\n                    if (rowA[j+1] && rowA[j+1] === \"X\") mines++;    \n                }\n\n                if (arr[i+1]) {\n                    const rowB = arr[i+1].split(\",\");\n                    if (rowB[j] && rowB[j] === \"X\") mines++;\n                    if (rowB[j-1] && rowB[j-1] === \"X\") mines++;\n                    if (rowB[j+1] && rowB[j+1] === \"X\") mines++;  \n                }\n                console.log(\"mines found\", mines);\n                resultRowArr.push(mines);\n            }\n            console.log(\"resulted array\", resultRowArr);\n            resultArr.push(resultRowArr.toString());\n        }\n        console.log(\"result string array\", resultArr);\n    };\n\n    render() {\n        const input = [\"XOO\", \"OOO\", \"XXO\"];\n        return (\n            <div>\n                <button onClick={() => this.calculateMines(input)}>Calculate</button>\n            </div>\n        )\n    }\n}\n\nexport default Test;","import React from 'react';\n\nimport { Upload, Button } from 'antd';\n\nfunction FileUpload(props) {\n\n    const { fileUploaded, selectedModel } = props;\n    const uploadProps = {\n        name: selectedModel.replace(/ /g,\"_\").toLowerCase(),\n        onChange: info => {\n            const myFile = new File([info.file], `${selectedModel.replace(/ /g,\"_\").toLowerCase()}.png`);\n            fileUploaded(myFile);\n        }\n    };\n\n    return (\n        <Upload\n            name=\"file\" \n            beforeUpload={() => false} \n            accept=\".png, .gif, .jpg, .jpeg\" \n            {...uploadProps}\n        >\n            <Button disabled={!selectedModel.length}>Click to Upload</Button>\n        </Upload>\n    )\n}\n\nexport default FileUpload;","export default __webpack_public_path__ + \"static/media/Pulse-1s.82769bdb.svg\";","import React from 'react';\nimport S3 from 'react-aws-s3';\nimport { Form, Select, Button, notification } from 'antd';\nimport FileUpload from './upload';\n\nimport PulseLoading from '../../assets/Pulse-1s.svg';\n\nimport \"antd/dist/antd.css\";\nimport './style.css';\n\nconst { Option } = Select;\n\nclass CarUpload extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            image: null,\n            brands: [],\n            models: [],\n            inputModels: [],\n            selectedBrand: '',\n            selectedModel: ''\n        };\n\n        this.formRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.fetchAllCarModels();\n    }\n\n    fetchAllCarModels = () => {\n        this.setState({ loading: true }, () => {\n            fetch('http://13.235.9.231:3000/api/v1/carModel/get_all_cars')\n            .then(response => response.json())\n            .then(data => {\n\n                const brands = [];\n                const models = [];\n\n                data.data.map(carData => {\n                    const brandEx = brands.find(b => b === carData.brand);\n                    if (!brandEx) {\n                        brands.push(carData.brand);\n                    }\n\n                    const modelEx = models.find(m => m === carData.model);\n                    if (!modelEx) {\n                        models.push({ brand: carData.brand, model: carData.model, image: carData.image });\n                    }\n                });\n\n                this.setState({ brands: brands.sort((a, b) => a-b), models, loading: false });\n            });\n        });\n    }\n\n    brandSelected = (value) => {\n        const { models } = this.state;\n        const inputModels = [];\n\n        models.map(item => {\n            if (item.brand === value && !item.image) {\n                inputModels.push(item.model);\n            }\n        });\n\n        this.setState({ selectedBrand: value, inputModels }, () => { this.formRef.current.resetFields(['model', 'image']); });\n    };\n\n    modelSelected = value => {\n        this.setState({ selectedModel: value });\n    };\n\n    fileUploaded = image => {\n        const { selectedBrand, selectedModel } = this.state;\n\n        this.setState({ loading: true }, async () => {\n            const config = await this.getSignedUrl();\n    \n            if (config.config) {\n                config.config.dirName = `images/car-models/${selectedBrand.toLowerCase()}`\n            }\n            \n            const ReactS3Client = new S3(config.config);\n    \n            ReactS3Client\n            .uploadFile(image,  `${selectedModel.replace(/ /g,\"_\").toLowerCase()}.png`)\n            .then(data => {\n                // console.log(\"image saved\", data);\n                this.saveImageToDB(`https://dimqa6sffarw4.cloudfront.net/${data.key}`);\n            })\n            .catch(err => {\n                // console.error(\"got errror\", err);\n                this.setState({ loading: false });\n                this.showNotification('error', err);\n            })\n        });\n    };\n\n    saveImageToDB = (imagePath) => {\n        const { selectedBrand, selectedModel, models, inputModels } = this.state;\n\n        fetch(\"http://13.235.9.231:3000/api/v1/carModel/save_carmodel_image\", {\n            method: 'post',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n                brand: selectedBrand,\n                model : selectedModel,\n                image: imagePath\n            })\n        }).then(response => response.json())\n            .then(data => {\n                // console.log(\"data saved in db\", data);\n                const modelEx = models.findIndex(m => m === selectedModel);\n                const iModelEx = inputModels.findIndex(m => m === selectedModel);\n\n                models.splice(modelEx, 1);\n                inputModels.splice(iModelEx, 1);\n\n                this.setState({ loading: false, models, inputModels, selectedModel: '' }, () => {\n                    this.formRef.current.resetFields(['model', 'image']);\n                    window.open(data.data.image,'_blank');\n                });\n            }).catch(err => {\n                console.error(\"got errror\", err);\n                this.setState({ loading: false });\n                this.showNotification('error', err);\n            });\n    }\n\n    getSignedUrl = () => { \n        const { selectedBrand } = this.state;\n\n        return new Promise((resolve, reject) => {\n            fetch(\"http://13.235.9.231:3000/api/v1/utils/get-aws-config\", {\n                method: 'post',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify({\n                    fileName: selectedBrand\n                })\n            }).then(response => response.json())\n                .then(data => {\n                    resolve(data);\n                });\n        });\n    };\n\n    showNotification = (type, message) => {\n        notification[type]({\n            message: message,\n            description: '',\n          });\n    }\n\n    render() {\n        const { loading, brands, inputModels, selectedModel } = this.state;\n\n        return (\n            <div className=\"form\">\n                <Form name=\"carImgUpload\" onFinish={this.onFormFinish} ref={this.formRef}>\n                    <div className=\"loginForm\">\n                        <div className=\"inputField\">\n                            <Form.Item \n                                className=\"textLabel\" \n                                label=\"Brand\" \n                                name=\"brand\"\n                                rules={[\n                                        {\n                                            required : true,\n                                            message : 'Please select a brand'\n                                        }\n                                ]}>\n                                    \n                                <Select showSearch={true} defaultValue=\"\" style={{ width: 250 }} onChange={this.brandSelected}>\n                                    {brands.length ? brands.map(item => <Option value={item} key={item}>{item}</Option>) : <Option value=\"\">Loading brands</Option>}\n                                </Select>\n                                \n                            </Form.Item>\n                        </div>\n\n                        <div className=\"inputField\">\n                            <Form.Item \n                                className=\"textLabel\" \n                                label=\"Model\" \n                                name=\"model\"\n                                rules={[\n                                    {\n                                        required : true,\n                                        message : 'Please select a model'\n                                    }\n                                ]}\n                            >    \n\n                                <Select defaultValue=\"\" style={{ width: 250 }} onChange={this.modelSelected}>\n                                    {inputModels.length ? inputModels.map(item => <Option value={item} key={item}>{item}</Option>) : <Option value=\"\">Select brand</Option>}\n                                </Select>\n                            </Form.Item>\n                        </div>\n\n                        <div className=\"inputField\">\n                            <Form.Item \n                                className=\"textLabel\" \n                                label=\"Image\" \n                                name=\"image\"\n                                disabled={!selectedModel.length}\n                            >  \n                                <FileUpload selectedModel={selectedModel} fileUploaded={this.fileUploaded} />\n                            </Form.Item>\n\n                        </div>\n\n                        <div className=\"submitBtn\">\n                            <Button htmlType=\"submit\" disabled={loading}>Upload</Button>\n                            {loading ? <img src={PulseLoading} alt=\"loading\" width=\"50px\" /> : null}\n                        </div>\n                    </div>  \n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default CarUpload;","import React from 'react';\n\nimport { Upload, Button } from 'antd';\n\nfunction FileUpload(props) {\n\n    const { fileUploaded, selectedModel } = props;\n    const uploadProps = {\n        name: selectedModel.replace(/ /g,\"_\").toLowerCase(),\n        onChange: info => {\n            const myFile = new File([info.file], `${selectedModel.replace(/ /g,\"_\").toLowerCase()}.png`);\n            fileUploaded(myFile);\n        }\n    };\n\n    return (\n        <Upload\n            name=\"file\" \n            beforeUpload={() => false} \n            accept=\".png, .gif, .jpg, .jpeg\" \n            {...uploadProps}\n        >\n            <Button disabled={!selectedModel.length}>Click to Upload</Button>\n        </Upload>\n    )\n}\n\nexport default FileUpload;","import React from 'react';\nimport S3 from 'react-aws-s3';\nimport { Form, Select, Button, notification } from 'antd';\nimport FileUpload from './upload';\n\nimport PulseLoading from '../../assets/Pulse-1s.svg';\n\nimport \"antd/dist/antd.css\";\nimport './style.css';\n\nconst { Option } = Select;\n\nclass AppHome extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: false,\n            image: null,\n            brands: [],\n            models: [],\n            inputModels: [],\n            selectedBrand: '',\n            selectedModel: ''\n        };\n\n        this.formRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.fetchAllCarModels();\n    }\n\n    fetchAllCarModels = () => {\n        this.setState({ loading: true }, () => {\n            fetch('https://13.235.9.231:3000/api/v1/carModel/get_all_cars')\n            .then(response => response.json())\n            .then(data => {\n\n                const brands = [];\n                const models = [];\n\n                data.data.map(carData => {\n                    const brandEx = brands.find(b => b === carData.brand);\n                    if (!brandEx) {\n                        brands.push(carData.brand);\n                    }\n\n                    const modelEx = models.find(m => m === carData.model);\n                    if (!modelEx) {\n                        models.push({ brand: carData.brand, model: carData.model, image: carData.image });\n                    }\n                });\n\n                this.setState({ brands: brands.sort((a, b) => a-b), models, loading: false });\n            });\n        });\n    }\n\n    brandSelected = (value) => {\n        const { models } = this.state;\n        const inputModels = [];\n\n        models.map(item => {\n            if (item.brand === value && !item.image) {\n                inputModels.push(item.model);\n            }\n        });\n\n        this.setState({ selectedBrand: value, inputModels }, () => { this.formRef.current.resetFields(['model', 'image']); });\n    };\n\n    modelSelected = value => {\n        this.setState({ selectedModel: value });\n    };\n\n    fileUploaded = image => {\n        const { selectedBrand, selectedModel } = this.state;\n\n        this.setState({ loading: true }, async () => {\n            const config = await this.getSignedUrl();\n    \n            if (config.config) {\n                config.config.dirName = `images/car-models/${selectedBrand.toLowerCase()}`\n            }\n            \n            const ReactS3Client = new S3(config.config);\n    \n            ReactS3Client\n            .uploadFile(image,  `${selectedModel.replace(/ /g,\"_\").toLowerCase()}.png`)\n            .then(data => {\n                // console.log(\"image saved\", data);\n                this.saveImageToDB(`https://dimqa6sffarw4.cloudfront.net/${data.key}`);\n            })\n            .catch(err => {\n                // console.error(\"got errror\", err);\n                this.setState({ loading: false });\n                this.showNotification('error', err);\n            })\n        });\n    };\n\n    saveImageToDB = (imagePath) => {\n        const { selectedBrand, selectedModel, models, inputModels } = this.state;\n\n        fetch(\"https://13.235.9.231:3000/api/v1/carModel/save_carmodel_image\", {\n            method: 'post',\n            headers: {'Content-Type':'application/json'},\n            body: JSON.stringify({\n                brand: selectedBrand,\n                model : selectedModel,\n                image: imagePath\n            })\n        }).then(response => response.json())\n            .then(data => {\n                // console.log(\"data saved in db\", data);\n                const modelEx = models.findIndex(m => m === selectedModel);\n                const iModelEx = inputModels.findIndex(m => m === selectedModel);\n\n                models.splice(modelEx, 1);\n                inputModels.splice(iModelEx, 1);\n\n                this.setState({ loading: false, models, inputModels, selectedModel: '' }, () => {\n                    this.formRef.current.resetFields(['model', 'image']);\n                    window.open(data.data.image,'_blank');\n                });\n            }).catch(err => {\n                console.error(\"got errror\", err);\n                this.setState({ loading: false });\n                this.showNotification('error', err);\n            });\n    }\n\n    getSignedUrl = () => { \n        const { selectedBrand } = this.state;\n\n        return new Promise((resolve, reject) => {\n            fetch(\"https://13.235.9.231:3000/api/v1/utils/get-aws-config\", {\n                method: 'post',\n                headers: {'Content-Type':'application/json'},\n                body: JSON.stringify({\n                    fileName: selectedBrand\n                })\n            }).then(response => response.json())\n                .then(data => {\n                    resolve(data);\n                });\n        });\n    };\n\n    showNotification = (type, message) => {\n        notification[type]({\n            message: message,\n            description: '',\n          });\n    }\n\n    render() {\n        const { loading, brands, inputModels, selectedModel } = this.state;\n\n        return (\n            <div className=\"form\">\n                <Form name=\"carImgUpload\" onFinish={this.onFormFinish} ref={this.formRef}>\n                    <div className=\"loginForm\">\n                        <div className=\"inputField\">\n                            <Form.Item \n                                className=\"textLabel\" \n                                label=\"Brand\" \n                                name=\"brand\"\n                                rules={[\n                                        {\n                                            required : true,\n                                            message : 'Please select a brand'\n                                        }\n                                ]}>\n                                    \n                                <Select showSearch={true} defaultValue=\"\" style={{ width: 250 }} onChange={this.brandSelected}>\n                                    {brands.length ? brands.map(item => <Option value={item} key={item}>{item}</Option>) : <Option value=\"\">Loading brands</Option>}\n                                </Select>\n                                \n                            </Form.Item>\n                        </div>\n\n                        <div className=\"inputField\">\n                            <Form.Item \n                                className=\"textLabel\" \n                                label=\"Model\" \n                                name=\"model\"\n                                rules={[\n                                    {\n                                        required : true,\n                                        message : 'Please select a model'\n                                    }\n                                ]}\n                            >    \n\n                                <Select defaultValue=\"\" style={{ width: 250 }} onChange={this.modelSelected}>\n                                    {inputModels.length ? inputModels.map(item => <Option value={item} key={item}>{item}</Option>) : <Option value=\"\">Select brand</Option>}\n                                </Select>\n                            </Form.Item>\n                        </div>\n\n                        <div className=\"inputField\">\n                            <Form.Item \n                                className=\"textLabel\" \n                                label=\"Image\" \n                                name=\"image\"\n                                disabled={!selectedModel.length}\n                            >  \n                                <FileUpload selectedModel={selectedModel} fileUploaded={this.fileUploaded} />\n                            </Form.Item>\n\n                        </div>\n\n                        <div className=\"submitBtn\">\n                            <Button htmlType=\"submit\" disabled={loading}>Upload</Button>\n                            {loading ? <img src={PulseLoading} alt=\"loading\" width=\"50px\" /> : null}\n                        </div>\n                    </div>  \n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default AppHome;","\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Home from './components/home';\nimport Login from './components/login';\nimport Test from './components/test';\nimport CarUpload from './components/carUpload';\nimport AppHome from './components/AppHome';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <AppHome />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/login`}>\n            <Login />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/home`}>\n            <Home />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/test`}>\n            <Test />\n          </Route>\n          <Route path={`${process.env.PUBLIC_URL}/car`}>\n            <CarUpload />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}